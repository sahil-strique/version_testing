syntax = "proto3";

package strique.model.widget.google_analytics;

import "constants/datetime/hour.proto";
import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "options/strique_enum_options.proto";
import "types/currency/currency.proto";

option java_outer_classname = "TimeWiseBifurcationProto";
option java_package = "com.strique.model.widget.googleanalytics";

// Next Id: 5
// Proto definition for Time-wise Bifurcation Data.
message TimeWiseBifurcationData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated TimeWiseBifurcationRecord records = 2;

  // Total record.
  optional TimeWiseBifurcationRecord total = 3;

  // Summary data for a subset of records.
  optional TimeWiseBifurcationRecord subtotal = 4;
}

// Next Id: 7
// Proto definition for a single record of Time-wise Bifurcation.
message TimeWiseBifurcationRecord {
  // Time in hours
  constants.Hour hour = 1 [json_name = "hour"];

  // Number of session created for a paticular hour
  uint64 sessions = 2 [json_name = "sessions"];

  // Number of add to cart done for a paticular hour
  uint64 add_to_carts = 3 [json_name = "addToCarts"];

  // Number of checkouts done for a paticular hour
  uint64 checkouts = 4 [json_name = "checkouts"];

  // Number of purchase done for a paticular hour
  uint64 purchases = 5 [json_name = "purchases"];

  // Total revenue generated for a paticular hour
  types.Currency revenue = 6 [json_name = "revenue"];
}

// Next Id: 4
// Proto definition for Time-wise Bifurcation Data Configuration.
message TimeWiseBifurcationConfig {
  // Next Id: 7
  // Enumeration of possible columns in the Time-wise Bifurcation Data table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false
    ];
    COLUMN_HOUR = 1 [
      (options.label) = 'Hour',
      (options.accessor_key) = 'hour',
      (options.is_sortable) = true
    ];
    COLUMN_SESSIONS = 2 [
      (options.label) = 'Sessions',
      (options.accessor_key) = 'sessions',
      (options.is_sortable) = true
    ];
    COLUMN_ADD_TO_CARTS = 3 [
      (options.label) = 'Add to cart',
      (options.accessor_key) = 'addToCarts',
      (options.is_sortable) = true
    ];
    COLUMN_CHECKOUTS = 4 [
      (options.label) = 'Checkouts',
      (options.accessor_key) = 'checkouts',
      (options.is_sortable) = true
    ];
    COLUMN_PURCHASES = 5 [
      (options.label) = 'Purchases',
      (options.accessor_key) = 'purchases',
      (options.is_sortable) = true
    ];
    COLUMN_REVENUE = 6 [
      (options.label) = 'Revenue',
      (options.accessor_key) = 'revenue',
      (options.is_sortable) = true
    ];
  }

  // Next Id: 7
  // Configuration for the table displayed in the Time-wise Bifurcation Data.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;
  }

  // Next Id: 3
  // Configuration for the area chart displayed in the Time-wise Bifurcation Data.
  message AreaChartConfig {
    // Specifies the dimension for the area chart.
    Column dimension = 1;

    // Specifies the areas for the area chart.
    repeated Column areas = 2;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;

  // Configuration for the area chart displayed in the widget.
  AreaChartConfig area_chart_config = 3;
}
