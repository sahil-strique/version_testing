syntax = "proto3";

package strique.model.widget.google_analytics;

import "constants/ui/render_type.proto";
import "db/google_analytics/new_vs_returning_users.proto";
import "options/strique_enum_options.proto";
import "types/currency/currency.proto";

option java_outer_classname = "NewVsReturningUsersProto";
option java_package = "com.strique.model.widget.googleanalytics";

// Next Id: 5
// Proto definition for New Vs Returning Users Data.
message NewVsReturningUsersData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated NewVsReturningUsersRecord records = 2;

  // Total record.
  optional NewVsReturningUsersRecord total = 3;

  // Summary data for a subset of records.
  optional NewVsReturningUsersRecord subtotal = 4;
}

// Next Id: 3
// Proto definition for a single record of New Vs Returning Users.
message NewVsReturningUsersRecord {
  // Type of user
  db.google_analytics.NewVsReturningUser.NewVsReturningUserType user_type = 1 [json_name = "userType"];

  // Percentage of users of a user type
  float user_percentage = 2 [json_name = "userPercentage"];

  // Total revenue generated by a user type
  types.Currency total_revenue = 3 [json_name = "totalRevenue"];
}

// Next Id: 2
// Proto definition for New Vs Returning Users Data Configuration.
message NewVsReturningUsersConfig {
  // Next Id: 4
  // Enumeration of possible columns in the New Vs Returning Users Data table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false
    ];
    COLUMN_USER_TYPE = 1 [
      (options.label) = 'User type',
      (options.accessor_key) = 'userType',
      (options.is_sortable) = false
    ];
    COLUMN_USER_PERCENTAGE = 2 [
      (options.label) = 'User percentage',
      (options.accessor_key) = 'userPercentage',
      (options.is_sortable) = true
    ];
    COLUMN_TOTAL_REVENUE = 3 [
      (options.label) = 'Revenue',
      (options.accessor_key) = 'totalRevenue',
      (options.is_sortable) = true
    ];
  }

  // Next Id: 3
  // Configuration for the pie chart displayed in the New Vs Returning Users Data.
  message PieChartConfig {
    // Specifies the dimension for the pie chart.
    Column dimension = 1;

    // Specifies the metric for the pie chart.
    Column metric = 2;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the pie chart displayed in the widget.
  PieChartConfig pie_chart_config = 2;
}
