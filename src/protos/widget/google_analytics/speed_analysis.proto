syntax = "proto3";

package strique.model.widget.google_analytics;

import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "google/protobuf/timestamp.proto";
import "options/strique_enum_options.proto";
import "types/media/media.proto";

option java_outer_classname = "SpeedAnalysisProto";
option java_package = "com.strique.model.widget.googleanalytics";

// Next Id: 5
// Proto definition for Speed Analysis Data.
message SpeedAnalysisData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated SpeedAnalysisRecord records = 2;

  // Total record.
  optional SpeedAnalysisRecord total = 3;

  // Summary data for a subset of records.
  optional SpeedAnalysisRecord subtotal = 4;
}

// Next Id: 4
// Proto definition for a single record of Speed Analysis.
message SpeedAnalysisRecord {
  // Date corresponding for a record of Speed Analysis
  google.protobuf.Timestamp date = 1 [json_name = "date"];

  // Total score for a specific date
  float score = 2 [json_name = "score"];

  // URL(s) associated with a record of Speed Analysis
  repeated types.Media url = 3 [json_name = "url"];
}

// Next Id: 4
// Proto definition for Speed Analysis Data Configuration.
message SpeedAnalysisConfig {
  // Next Id: 4
  // Enumeration of possible columns in the Speed Analysis Data table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false
    ];
    COLUMN_DATE = 1 [
      (options.label) = 'Date',
      (options.accessor_key) = 'date',
      (options.is_sortable) = true
    ];
    COLUMN_SCORE = 2 [
      (options.label) = 'Score',
      (options.accessor_key) = 'score',
      (options.is_sortable) = true
    ];
    COLUMN_URL = 3 [
      (options.label) = 'URL',
      (options.accessor_key) = 'url',
      (options.is_sortable) = false
    ];
  }

  // Next Id: 7
  // Configuration for the table displayed in the Speed Analysis Data.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;
  }

  // Next Id: 3
  // Configuration for the line chart displayed in the Speed Analysis Data.
  message LineChartConfig {
    // Specifies the dimension for the line chart.
    Column dimension = 1;

    // Specifies the lines for the line chart.
    repeated Column lines = 2;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;

  // Configuration for the line chart displayed in the widget.
  LineChartConfig line_chart_config = 3;
}
