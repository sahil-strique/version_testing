syntax = "proto3";

package strique.model.widget.tiktok;

import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "options/strique_enum_options.proto";
import "types/currency/currency.proto";

option java_outer_classname = "TikTokCampaignsProto";
option java_package = "com.strique.model.widget.tiktok";

// Next Id: 5
// Proto definition for TikTok Campaigns Data.
message TikTokCampaignsData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated TikTokCampaignsRecord records = 2;

  // Total record.
  optional TikTokCampaignsRecord total = 3;

  // Summary data for a subset of records.
  optional TikTokCampaignsRecord subtotal = 4;
}

// Next Id: 52
// Proto definition for a single record of TikTok Campaigns.
message TikTokCampaignsRecord {
  // Campaign name
  // name of the campaign.
  string campaign_name = 1 [json_name = "campaignName"];

  // Cost
  // amount spent on advertising.
  types.Currency cost = 2 [json_name = "cost"];

  // CPC (Destination)
  // average cost for each click (destination) on the ad.
  types.Currency cost_per_click_destination = 3 [json_name = "costPerClickDestination"];

  // CPM
  // cost of 1000 impressions.
  types.Currency cost_per_mille = 4 [json_name = "costPerMille"];

  // Impression
  // total impressions of the ad.
  int64 impression = 5 [json_name = "impression"];

  // Clicks (destination)
  // number of clicks (destination).
  int64 clicks_destination = 6 [json_name = "clicksDestination"];

  // CTR (destination)
  // percentage of impressions resulting in a click.
  float click_through_rate_destination = 7 [json_name = "clickThroughRateDestination"];

  // Reach
  int64 reach = 8 [json_name = "reach"];

  // Frequency
  // average number of impressions per user reached.
  float frequency = 9 [json_name = "frequency"];

  // Conversion
  // number of conversions.
  int64 conversion = 10 [json_name = "conversion"];

  // Cost per conversion
  // amount spent per conversion.
  types.Currency cost_per_conversion = 11 [json_name = "costPerConversion"];

  // Conversion rate (CVR)
  // percentage of clicks that resulted in a conversion.
  float conversion_rate = 12 [json_name = "conversionRate"];

  // Real time conversion
  // conversions happening in real-time.
  int64 real_time_conversion = 13 [json_name = "realTimeConversion"];

  // Real time cost per conversion
  // amount spent per real-time conversion.
  types.Currency real_time_cost_per_conversion = 14 [json_name = "realTimeCostPerConversion"];

  // Real time conversion rate (CVR)
  // percentage of real-time clicks that resulted in a conversion.
  float real_time_conversion_rate = 15 [json_name = "realTimeConversionRate"];

  // Clicks (all)
  // total number of clicks (all).
  int64 clicks_all = 16 [json_name = "clicksAll"];

  // CTR (all)
  // percentage of impressions resulting in a click (all).
  float click_through_rate_all = 17 [json_name = "clickThroughRateAll"];

  // Complete payment ROAS
  // return on ad spend for complete payments.
  string complete_payment_roas = 18 [json_name = "completePaymentRoas"];

  // Payments completed (page)
  // number of completed payments (page).
  int64 payments_completed_page = 19 [json_name = "paymentsCompletedPage"];

  // Cost per payment completed (page)
  // amount spent per completed payment (page).
  types.Currency cost_per_payment_completed_page = 20 [json_name = "costPerPaymentCompletedPage"];

  // Unique payment completion rate % (page)
  // percentage of payment completions (page).
  float unique_payment_completion_rate_page = 21 [json_name = "uniquePaymentCompletionRatePage"];

  // Value per complete payment (page)
  // value received per completed payment (page).
  types.Currency value_per_complete_payment_page = 22 [json_name = "valuePerCompletePaymentPage"];

  // Payment completion value
  // total value from payment completions.
  types.Currency payment_completion_value = 23 [json_name = "paymentCompletionValue"];

  // Total landing page views
  // total views on the landing page.
  int64 total_landing_page_views = 24 [json_name = "totalLandingPageViews"];

  // Cost per landing page view
  // amount spent per landing page view.
  types.Currency cost_per_landing_page_view = 25 [json_name = "costPerLandingPageView"];

  // Landing page view rate
  // percentage of clicks who viewed the landing page.
  float landing_page_view_rate = 26 [json_name = "landingPageViewRate"];

  // Total page views
  int64 total_page_views = 27 [json_name = "totalPageViews"];

  // Cost per page view
  // amount spent per page view.
  types.Currency cost_per_page_view = 28 [json_name = "costPerPageView"];

  // Page view rate %
  // percentage of clicks who viewed a page.
  float page_view_rate = 29 [json_name = "pageViewRate"];

  // Value per page view
  // value received per page view.
  types.Currency value_per_page_view = 30 [json_name = "valuePerPageView"];

  // Total page view value
  // total value from page views.
  types.Currency total_page_view_value = 31 [json_name = "totalPageViewValue"];

  // Add to cart (page)
  // number of add-to-cart actions (page).
  int64 add_to_cart_page = 32 [json_name = "addToCartPage"];

  // Cost per add to cart (page)
  // amount spent per add-to-cart action (page).
  types.Currency cost_per_add_to_cart_page = 33 [json_name = "costPerAddToCartPage"];

  // Unique add to cart rate % (page)
  // percentage of unique add-to-cart actions (page).
  float unique_add_to_cart_rate_page = 34 [json_name = "uniqueAddToCartRatePage"];

  // Value per add to cart (page)
  // value received per add-to-cart action (page).
  types.Currency value_per_add_to_cart_page = 35 [json_name = "valuePerAddToCartPage"];

  // Add to cart value (page)
  // total value from add-to-cart actions (page).
  types.Currency add_to_cart_value_page = 36 [json_name = "addToCartValuePage"];

  // Checkout initiated (page)
  // number of checkouts initiated (page).
  int64 checkout_initiated_page = 37 [json_name = "checkoutInitiatedPage"];

  // Cost per checkout initiated (page)
  // amount spent per initiated checkout (page).
  types.Currency cost_per_checkout_initiated_page = 38 [json_name = "costPerCheckoutInitiatedPage"];

  // Unique checkout initiated % (page)
  // percentage of unique checkouts initiated (page).
  float unique_checkout_initiated_page = 39 [json_name = "uniqueCheckoutInitiatedPage"];

  // Value per checkout initiated (page)
  // value received from initiated checkouts (page).
  types.Currency value_per_checkout_initiated_page = 40 [json_name = "valuePerCheckoutInitiatedPage"];

  // Checkout initiated value (page)
  // total value from initiated checkouts (page).
  types.Currency checkout_initiated_value_page = 41 [json_name = "checkoutInitiatedValuePage"];

  // Subscribe (page)
  // number of subscriptions (page).
  int64 subscribe_page = 42 [json_name = "subscribePage"];

  // Cost per subscribe (page)
  // amount spent per subscription (page).
  types.Currency cost_per_subscribe_page = 43 [json_name = "costPerSubscribePage"];

  // Unique subscribe rate % (page)
  // percentage of unique subscriptions (page).
  float unique_subscribe_rate_page = 44 [json_name = "uniqueSubscribeRatePage"];

  // Value per subscribe (page)
  // value received per subscription (page).
  types.Currency value_per_subscribe_page = 45 [json_name = "valuePerSubscribePage"];

  // Subscribe value (page)
  // total value from subscriptions (page).
  types.Currency subscribe_value_page = 46 [json_name = "subscribeValuePage"];

  // Form submission (page)
  // number of form submissions (page).
  int64 form_submission_page = 47 [json_name = "formSubmissionPage"];

  // Cost per submitted (page)
  // amount spent per form submission (page).
  types.Currency cost_per_submitted_page = 48 [json_name = "costPerSubmittedPage"];

  // Unique form submission rate % (page)
  // percentage of unique form submissions (page).
  float unique_form_submission_rate_page = 49 [json_name = "uniqueFormSubmissionRatePage"];

  // Value per form submit (page)
  // value received per form submission (page).
  types.Currency value_per_form_submit_page = 50 [json_name = "valuePerFormSubmitPage"];

  // Form submission value (page)
  // total value from form submissions (page).
  types.Currency form_submission_value_page = 51 [json_name = "formSubmissionValuePage"];
}

// Next Id: 3
// Proto definition for TikTok Campaigns Configuration.
message TikTokCampaignsConfig {
  // Next Id: 52
  // Enumeration of possible columns in the TikTok Campaigns table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false
    ];
    COLUMN_CAMPAIGN_NAME = 1 [
      (options.label) = 'Campaign name',
      (options.accessor_key) = 'campaignName',
      (options.is_sortable) = false
    ];
    COLUMN_COST = 2 [
      (options.label) = 'Cost',
      (options.accessor_key) = 'cost',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_CLICK_DESTINATION = 3 [
      (options.label) = 'Cost per click (destination)',
      (options.accessor_key) = 'costPerClickDestination',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_MILLE = 4 [
      (options.label) = 'CPM',
      (options.accessor_key) = 'costPerMille',
      (options.is_sortable) = true
    ];
    COLUMN_IMPRESSION = 5 [
      (options.label) = 'Impression',
      (options.accessor_key) = 'impression',
      (options.is_sortable) = true
    ];
    COLUMN_CLICKS_DESTINATION = 6 [
      (options.label) = 'Clicks (destination)',
      (options.accessor_key) = 'clicksDestination',
      (options.is_sortable) = true
    ];
    COLUMN_CLICK_THROUGH_RATE_DESTINATION = 7 [
      (options.label) = 'Click-through rate (destination)',
      (options.accessor_key) = 'clickThroughRateDestination',
      (options.is_sortable) = true
    ];
    COLUMN_REACH = 8 [
      (options.label) = 'Reach',
      (options.accessor_key) = 'reach',
      (options.is_sortable) = true
    ];
    COLUMN_FREQUENCY = 9 [
      (options.label) = 'Frequency',
      (options.accessor_key) = 'frequency',
      (options.is_sortable) = true
    ];
    COLUMN_CONVERSION = 10 [
      (options.label) = 'Conversion',
      (options.accessor_key) = 'conversion',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_CONVERSION = 11 [
      (options.label) = 'Cost per conversion',
      (options.accessor_key) = 'costPerConversion',
      (options.is_sortable) = true
    ];
    COLUMN_CONVERSION_RATE = 12 [
      (options.label) = 'Conversion rate (CVR)',
      (options.accessor_key) = 'conversionRate',
      (options.is_sortable) = true
    ];
    COLUMN_REAL_TIME_CONVERSION = 13 [
      (options.label) = 'Real time conversion',
      (options.accessor_key) = 'realTimeConversion',
      (options.is_sortable) = true
    ];
    COLUMN_REAL_TIME_COST_PER_CONVERSION = 14 [
      (options.label) = 'Real time cost per conversion',
      (options.accessor_key) = 'realTimeCostPerConversion',
      (options.is_sortable) = true
    ];
    COLUMN_REAL_TIME_CONVERSION_RATE = 15 [
      (options.label) = 'Real time conversion rate (CVR)',
      (options.accessor_key) = 'realTimeConversionRate',
      (options.is_sortable) = true
    ];
    COLUMN_CLICKS_ALL = 16 [
      (options.label) = 'Clicks (all)',
      (options.accessor_key) = 'clicksAll',
      (options.is_sortable) = true
    ];
    COLUMN_CLICK_THROUGH_RATE_ALL = 17 [
      (options.label) = 'Click-through rate (all)',
      (options.accessor_key) = 'clickThroughRateAll',
      (options.is_sortable) = true
    ];
    COLUMN_COMPLETE_PAYMENT_ROAS = 18 [
      (options.label) = 'Complete payment ROAS',
      (options.accessor_key) = 'completePaymentRoas',
      (options.is_sortable) = true
    ];
    COLUMN_PAYMENTS_COMPLETED_PAGE = 19 [
      (options.label) = 'Payments completed (page)',
      (options.accessor_key) = 'paymentsCompletedPage',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_PAYMENT_COMPLETED_PAGE = 20 [
      (options.label) = 'Cost per payment completed (page)',
      (options.accessor_key) = 'costPerPaymentCompletedPage',
      (options.is_sortable) = true
    ];
    COLUMN_UNIQUE_PAYMENT_COMPLETION_RATE = 21 [
      (options.label) = 'Unique payment completion rate % (page)',
      (options.accessor_key) = 'uniquePaymentCompletionRatePage',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_COMPLETE_PAYMENT_PAGE = 22 [
      (options.label) = 'Value per complete payment (page)',
      (options.accessor_key) = 'valuePerCompletePaymentPage',
      (options.is_sortable) = true
    ];
    COLUMN_PAYMENT_COMPLETION_VALUE = 23 [
      (options.label) = 'Payment completion value',
      (options.accessor_key) = 'paymentCompletionValue',
      (options.is_sortable) = true
    ];
    COLUMN_TOTAL_LANDING_PAGE_VIEWS = 24 [
      (options.label) = 'Total landing page views',
      (options.accessor_key) = 'totalLandingPageViews',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_LANDING_PAGE_VIEW = 25 [
      (options.label) = 'Cost per landing page view',
      (options.accessor_key) = 'costPerLandingPageView',
      (options.is_sortable) = true
    ];
    COLUMN_LANDING_PAGE_VIEW_RATE = 26 [
      (options.label) = 'Landing page view rate',
      (options.accessor_key) = 'landingPageViewRate',
      (options.is_sortable) = true
    ];
    COLUMN_TOTAL_PAGE_VIEWS = 27 [
      (options.label) = 'Total page views',
      (options.accessor_key) = 'totalPageViews',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_PAGE_VIEW = 28 [
      (options.label) = 'Cost per page view',
      (options.accessor_key) = 'costPerPageView',
      (options.is_sortable) = true
    ];
    COLUMN_PAGE_VIEW_RATE = 29 [
      (options.label) = 'Page view rate %',
      (options.accessor_key) = 'pageViewRate',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_PAGE_VIEW = 30 [
      (options.label) = 'Value per page view',
      (options.accessor_key) = 'valuePerPageView',
      (options.is_sortable) = true
    ];
    COLUMN_TOTAL_PAGE_VIEW_VALUE = 31 [
      (options.label) = 'Total page view value',
      (options.accessor_key) = 'totalPageViewValue',
      (options.is_sortable) = true
    ];
    COLUMN_ADD_TO_CART_PAGE = 32 [
      (options.label) = 'Add to cart (page)',
      (options.accessor_key) = 'addToCartPage',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_ADD_TO_CART_PAGE = 33 [
      (options.label) = 'Cost per add to cart (page)',
      (options.accessor_key) = 'costPerAddToCartPage',
      (options.is_sortable) = true
    ];
    COLUMN_UNIQUE_ADD_TO_CART_RATE = 34 [
      (options.label) = 'Unique add to cart rate % (page)',
      (options.accessor_key) = 'uniqueAddToCartRatePage',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_ADD_TO_CART_PAGE = 35 [
      (options.label) = 'Value per add to cart (page)',
      (options.accessor_key) = 'valuePerAddToCartPage',
      (options.is_sortable) = true
    ];
    COLUMN_ADD_TO_CART_VALUE_PAGE = 36 [
      (options.label) = 'Add to cart value (page)',
      (options.accessor_key) = 'addToCartValuePage',
      (options.is_sortable) = true
    ];
    COLUMN_CHECKOUT_INITIATED_PAGE = 37 [
      (options.label) = 'Checkout initiated (page)',
      (options.accessor_key) = 'checkoutInitiatedPage',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_CHECKOUT_INITIATED_RATE = 38 [
      (options.label) = 'Cost per checkout initiated (page)',
      (options.accessor_key) = 'costPerCheckoutInitiatedPage',
      (options.is_sortable) = true
    ];
    COLUMN_UNIQUE_CHECKOUT_INITIATED_RATE = 39 [
      (options.label) = 'Unique checkout initiated % (page)',
      (options.accessor_key) = 'uniqueCheckoutInitiatedPage',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_CHECKOUT_INITIATED_PAGE = 40 [
      (options.label) = 'Value per checkout initiated (page)',
      (options.accessor_key) = 'valuePerCheckoutInitiatedPage',
      (options.is_sortable) = true
    ];
    COLUMN_CHECKOUT_INITIATED_VALUE_PAGE = 41 [
      (options.label) = 'Checkout initiated value (page)',
      (options.accessor_key) = 'checkoutInitiatedValuePage',
      (options.is_sortable) = true
    ];
    COLUMN_SUBSCRIBE_PAGE = 42 [
      (options.label) = 'Subscribe (page)',
      (options.accessor_key) = 'subscribePage',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_SUBSCRIBE_PAGE = 43 [
      (options.label) = 'Cost per subscribe (page)',
      (options.accessor_key) = 'costPerSubscribePage',
      (options.is_sortable) = true
    ];
    COLUMN_UNIQUE_SUBSCRIBE_RATE = 44 [
      (options.label) = 'Unique subscribe rate (page)',
      (options.accessor_key) = 'uniqueSubscribeRatePage',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_SUBSCRIBE_PAGE = 45 [
      (options.label) = 'Value per subscribe (page)',
      (options.accessor_key) = 'valuePerSubscribePage',
      (options.is_sortable) = true
    ];
    COLUMN_SUBSCRIBE_VALUE_PAGE = 46 [
      (options.label) = 'Subscribe value (page)',
      (options.accessor_key) = 'subscribeValuePage',
      (options.is_sortable) = true
    ];
    COLUMN_FORM_SUBMISSION_PAGE = 47 [
    (options.label) = 'Form submission (page)',
    (options.accessor_key) = 'formSubmissionPage',
    (options.is_sortable) = true
    ];
    COLUMN_COST_PER_SUBMITTED_PAGE = 48 [
      (options.label) = 'Cost per submitted (page)',
      (options.accessor_key) = 'costPerSubmittedPage',
      (options.is_sortable) = true
    ];
    COLUMN_UNIQUE_FORM_SUBMISSION_RATE = 49 [
      (options.label) = 'Unique form submission rate % (page)',
      (options.accessor_key) = 'uniqueFormSubmissionRatePage',
      (options.is_sortable) = true
    ];
    COLUMN_VALUE_PER_FORM_SUBMIT_PAGE = 50 [
      (options.label) = 'Value per form submit (page)',
      (options.accessor_key) = 'valuePerFormSubmitPage',
      (options.is_sortable) = true
    ];
    COLUMN_FORM_SUBMISSION_VALUE_PAGE = 51 [
      (options.label) = 'Form submission value (page)',
      (options.accessor_key) = 'formSubmissionValuePage',
      (options.is_sortable) = true
    ];
  }

  // Next Id: 7
  // Configuration for the table displayed in the TikTok Campaigns.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;
}
