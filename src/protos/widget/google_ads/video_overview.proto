syntax = "proto3";

package strique.model.widget.google_ads;

import "constants/ui/render_type.proto";
import "constants/ui/sorting_direction.proto";
import "options/strique_enum_options.proto";
import "types/currency/currency.proto";

option java_outer_classname = "VideoOverviewProto";
option java_package = "com.strique.model.widget.googleads";

// Next Id: 5
// Proto definition for Video Overview Data.
message VideoOverviewData {
  // Title for this widget.
  string widget_title = 1;

  // List of records for this widget.
  repeated VideoOverviewRecord records = 2;

  // Total record.
  optional VideoOverviewRecord total = 3;

  // Summary data for a subset of records.
  optional VideoOverviewRecord subtotal = 4;
}

// Next Id: 15
// Proto definition for a single record of Video Overview.
message VideoOverviewRecord {
  // Campaign name.
  string campaign_name = 1 [json_name = "campaignName"];

  // Cost incurred for the campaign.
  types.Currency cost = 2 [json_name = "cost"];

  // Number of impressions.
  // Number of times the video ad was viewed.
  uint64 impressions = 3 [json_name = "impressions"];

  // Number of views.
  uint64 views = 4 [json_name = "views"];

  // Number of clicks.
  uint64 clicks = 5 [json_name = "clicks"];

  // Number of conversions.
  double conversions = 6 [json_name = "conversions"];

  // Click-through rate (CTR).
  // Percentage of impressions that resulted in a click.
  float click_through_rate = 7 [json_name = "clickThroughRate"];

  // Cost per conversion (CPP).
  // Average cost for each conversion.
  types.Currency cost_per_conversion = 8 [json_name = "costPerConversion"];

  // Average cost per click (CPC).
  types.Currency average_cost_per_click = 9 [json_name = "averageCostPerClick"];

  // Average cost per mille (CPM).
  // Cost of 1000 impressions.
  types.Currency average_cost_per_mille = 10 [json_name = "averageCostPerMille"];

  // Average cost per view (CPV).
  types.Currency average_cost_per_view = 11 [json_name = "averageCostPerView"];

  // Total revenue generated.
  types.Currency conversion_value = 12 [json_name = "conversionValue"];

  // Average order value (AOV).
  // Average value of each order.
  types.Currency average_order_value = 13 [json_name = "averageOrderValue"];

  // Return on ad spend (ROAS).
  // Revenue generated for every dollar spent on advertising.
  string return_on_ad_spend = 14 [json_name = "returnOnAdSpend"];
}

// Next Id: 3
// Proto definition for Video Overview Configuration.
message VideoOverviewConfig {
  // Next Id: 15
  // Enumeration of possible columns in the Video Overview table.
  enum Column {
    COLUMN_UNKNOWN = 0 [
      (options.label) = 'Unknown',
      (options.accessor_key) = '',
      (options.is_sortable) = false
    ];
    COLUMN_CAMPAIGN_NAME = 1 [
      (options.label) = 'Campaign name',
      (options.accessor_key) = 'campaignName',
      (options.is_sortable) = false
    ];
    COLUMN_COST = 2 [
      (options.label) = 'Cost',
      (options.accessor_key) = 'cost',
      (options.is_sortable) = true
    ];
    COLUMN_IMPRESSIONS = 3 [
      (options.label) = 'Impressions',
      (options.accessor_key) = 'impressions',
      (options.is_sortable) = true
    ];
    COLUMN_VIEWS = 4 [
      (options.label) = 'Views',
      (options.accessor_key) = 'views',
      (options.is_sortable) = true
    ];
    COLUMN_CLICKS = 5 [
      (options.label) = 'Clicks',
      (options.accessor_key) = 'clicks',
      (options.is_sortable) = true
    ];
    COLUMN_CONVERSIONS = 6 [
      (options.label) = 'Conversions',
      (options.accessor_key) = 'conversions',
      (options.is_sortable) = true
    ];
    COLUMN_CLICK_THROUGH_RATE = 7 [
      (options.label) = 'Click through rate',
      (options.accessor_key) = 'clickThroughRate',
      (options.is_sortable) = true
    ];
    COLUMN_COST_PER_CONVERSION = 8 [
      (options.label) = 'Cost per conversion',
      (options.accessor_key) = 'costPerConversion',
      (options.is_sortable) = true
    ];
    COLUMN_AVERAGE_COST_PER_CLICK = 9 [
      (options.label) = 'Avg. CPC',
      (options.accessor_key) = 'averageCostPerClick',
      (options.is_sortable) = true
    ];
    COLUMN_AVERAGE_COST_PER_MILLE = 10 [
      (options.label) = 'Avg. CPM',
      (options.accessor_key) = 'averageCostPerMille',
      (options.is_sortable) = true
    ];
    COLUMN_AVERAGE_COST_PER_VIEW = 11 [
      (options.label) = 'Avg. Cost per view',
      (options.accessor_key) = 'averageCostPerView',
      (options.is_sortable) = true
    ];
    COLUMN_CONVERSION_VALUE = 12 [
      (options.label) = 'Conversion value',
      (options.accessor_key) = 'conversionValue',
      (options.is_sortable) = true
    ];
    COLUMN_AVERAGE_ORDER_VALUE = 13 [
      (options.label) = 'Average order value',
      (options.accessor_key) = 'averageOrderValue',
      (options.is_sortable) = true
    ];
    COLUMN_RETURN_ON_AD_SPEND = 14 [
      (options.label) = 'ROAS',
      (options.accessor_key) = 'returnOnAdSpend',
      (options.is_sortable) = true
    ];
  }

  // Next Id: 7
  // Configuration for the table displayed in the Video Overview.
  message TableConfig {
    // Specifies the order of columns in the table.
    repeated Column column_order = 1;

    // Specifies columns to be hidden in the table.
    repeated Column column_hidden = 2;

    // Specifies the default column used for sorting.
    Column default_sorted_column = 3;

    // Specifies the sorting direction.
    constants.ui.SortingDirection sorting_direction = 4;

    // Indicates whether to display the total row in the table.
    bool show_total = 5;

    // Indicates whether to display the subtotal row in the table.
    bool show_subtotal = 6;
  }

  // Specifies the type of rendering for the widget.
  constants.ui.RenderType render_type = 1;

  // Configuration for the table displayed in the widget.
  TableConfig table_config = 2;
}
